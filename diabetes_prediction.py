# -*- coding: utf-8 -*-
"""diabetes prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VXGZ_qZ6G5FM79TlWOwSrcuRf_a-sBvz
"""

import numpy as np
import pandas as pd
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score

data = pd.read_csv('/content/diabetes.csv')
data.head()

data.shape

data['Outcome'].value_counts()

features = data.drop(columns='Outcome',axis=1)
target = data['Outcome']

scaler = StandardScaler()
scaler.fit(features)

std_data = scaler.transform(features)

print(std_data)

"""spliting data into training and testing data"""

x_train,x_test,y_train,y_test = train_test_split(std_data,target,test_size=0.2,stratify=target,random_state=1)

print(std_data.shape,x_train.shape,x_test.shape)

model = SVC(kernel='linear')

"""fitting the data for training using training data set"""

model.fit(x_train,y_train)

"""predicting the diabetes for training data set"""

train_result = model.predict(x_train)

"""checking the accuracy score of training data result"""

training_accuracy = accuracy_score(y_train,train_result)

print('training accuracy score : ',training_accuracy)

test_result = model.predict(x_test)

test_accuracy = accuracy_score(y_test,test_result)

print('testing accuracy : ',test_accuracy)

input_val = (1,85,66,29,0,26.6,0.351,31)

input_val_array = np.asarray(input_val)

trans_data = input_val_array.reshape(1,-1)
print(trans_data.shape)

x_input = scaler.transform(trans_data)

print(x_input)

input_result = model.predict(x_input)

print(input_result)

if(input_result==0):
  print("The person does not have Diabetes")
else:
  print("The person have Diabetes")

